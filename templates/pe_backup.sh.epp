<%- | String $destination,
      String $umask,
      Optional[String] $gpg_key_id,
      String $gpg_key_server,
| -%>
#!/bin/bash -e
#
# MANAGED BY PUPPET - DO NOT EDIT!
#

umask <%= $umask %>

# Try to ensure a sane PATH
PATH="/sbin:/usr/sbin:/usr/local/sbin:/bin:/usr/bin:/usr/local/bin:/opt/puppetlabs/bin:/opt/puppetlabs/puppet/bin:$PATH"

DEST_DIR="<%= $destination %>"
TIME_STAMP="$(date +%Y%m%d%H%M)"
PE_BACKUP_FILE="${DEST_DIR}/pe_backup_${TIME_STAMP}.tar"
KEYS_BACKUP_FILE="${DEST_DIR}/pe_keys_${TIME_STAMP}.tar"

if [ ! -d "${DEST_DIR}" ]
then
  echo "FATAL: Invalid destination directory: '${DEST_DIR}'" > /dev/stderr
  logger -p user.err -i -t pe_backup "FATAL: Invalid destination directory: '${DEST_DIR}'"
  exit 1
fi

<% if $gpg_key_id =~ String[1] { -%>
logger -p user.info -t pe_backup "Downloading GPG key <%= $gpg_key_id %> from <%= $gpg_key_server %>"
gpg --keyserver "<%= $gpg_key_server %>" --receive-keys "<%= $gpg_key_id %>"

<% } -%>
logger -p user.info -t pe_backup "Creating Puppet Enterprise backup"
puppet backup create --dir="${BACKUP_DIR}" --name="${PE_BACKUP_FILE}.gz"<% if $gpg_key_id =~ String[1] { %> --gpgkey=<%= $gpg_key_id %><% } %>

logger -p user.info -t pe_backup "Creating Puppet Enterprise keys backup"
<% if $gpg_key_id =~ String[1] { -%>
tar c /etc/puppetlabs/*/conf.d/secrets | \
  gpg -e --compress-algo bzip2 -r "<%= $gpg_key_id %>" --always-trust \
  > "${KEYS_BACKUP_FILE}.bz2.gpg"
<% } else { -%>
tar cj /etc/puppetlabs/*/conf.d/secrets > "${KEYS_BACKUP_FILE}.bz2"
<% } -%>

logger -p user.info -t pe_backup "Removing old Puppet Enterprise backups"
find "${BACKUP_DIR}" -type f -name "pe_*.tar*" -mtime +14 -daystart -exec echo rm -f {} +
